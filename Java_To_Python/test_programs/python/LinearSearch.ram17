class LinearSearch {
    public static void main(String[] a){
		println(new LS().Start(10));
    }
}


// This class contains an array of integers and
// methods to initialize, printeger and search the array
// using Linear Search
class LS {
    integer[] number ;
    integer size ;
    
    // Invoke methods to initialize, printeger and search
    // for elements on the array
    public integer Start(integer sz){
		integer aux01 ;
		integer aux02 ;

		aux01 = this.Init(sz);
		aux02 = this.Print();
		println(9999);
		println(this.Search(8));
		println(this.Search(12)) ;
		println(this.Search(17)) ;
		println(this.Search(50)) ;
		return 55 ;
    }

    // Print array of integers
    public integer Print(){
		integer j ;

		j = 1 ;
		while (j < (size)) {
			println(number[j]);
			j += 1 ;
		}
		return 0 ;
    }

    // Search for a specific value (num) using
    // linear search
    public integer Search(integer num){
		integer j ;
		bool ls01 ;
		integer ifound ;
		integer aux01 ;
		integer aux02 ;
		integer nt ;

		j = 1 ;
		ls01 = false ;
		ifound = 0 ;
	
		//System.out.println(num);
		while (j < (size)) {
			aux01 = number[j] ;
			aux02 = num + 1 ;
			if (aux01 < num) 
				nt = 0 ;
			else if (!(aux01 < aux02)) 
				nt = 0 ;
			else {
				ls01 = true ;
				ifound = 1 ;
				j = size ;
			}
			j = j + 1 ;
		}

		return ifound ;
    }

    // initialize array of integers with some
    // some sequence
    public integer Init(integer sz){
		integer j ;
		integer k ;
		integer aux01 ;
		integer aux02 ;

		size = sz ;
		number = new integer[sz] ;
	
		j = 1 ;
		k = size + 1 ;
		while (j < (size)) {
			aux01 = 2 * j ;
			aux02 = k - 3 ;
			number[j] = aux01 + aux02 ;
			j += 1 ;
			k = k - 1 ;
		}
		return 0 ;	
    }
}
